LLM GUIDANCE NOTES
==================

Repository: Taemin Park ‚Äî Personal Site & Blog (https://taemincode.github.io)
Purpose: Provide strict guardrails for LLM edits and responses.

Response Checklist
------------------
1. **Follow repository tone** ‚Äì educational, positive, concise. Avoid first-person unless writing blog content.
2. **Summaries** ‚Äì describe what changed, reference file paths, note tests or manual verification (if skipped, explain why).
3. **Cite files** ‚Äì always mention exact files and important line numbers when explaining changes.
4. **Never edit `_site/`** ‚Äì this directory is build output.
5. **Respect liquid tags** ‚Äì preserve `{% ... %}` and `{{ ... }}` syntax; do not convert to JSX, Vue, etc.
6. **Keep ASCII** ‚Äì introduce UTF-8 only when existing content already uses it (e.g., emoji in posts).

Key Files & Roles
-----------------
- `index.html` ‚Äì Home page sections (hero with email reveal toggle, timeline, snapshot, now, blog preview). Uses Bootstrap grid classes plus custom SCSS hooks; keep the `.hero-email-message` behavior intact. Any new section must reuse existing typography classes defined in `_sass/_about.scss`.
- `blogs.html` ‚Äì Full blog listing; cards rely on `.blog-card` styles, AOS attributes, and a helper script that wires `data-href` for keyboard activation. For new filters or sort options, update the loop over `site.posts`, keep the `blog-card-inspiration` overlay fed by `inspired_by`, and adjust `_sass/_blog.scss`.
- `_layouts/default.html` ‚Äì Global wrapper: head tags, navbar, footer, MathJax, Bootstrap, AOS, theme toggle, copy buttons, lightbox JS. Changes here affect every page‚Äîdouble-check accessibility attributes.
- `_layouts/post.html` ‚Äì Post layout with publish/updated logic, categories, previous/next nav. Honor Liquid conditionals when altering metadata blocks.
- `_sass/_variables.scss` ‚Äì Design tokens. Add new variables here before using raw hex codes. Apply both light and dark theme values.
- `_sass/_about.scss`, `_blog.scss`, `_footer.scss`, `_post.scss`, `_nav.scss` ‚Äì Section-specific styles. Keep selectors scoped (e.g., `.hero`, `.blog-card`) and rely on variables.
- `assets/css/site.scss` ‚Äì SCSS entry point. Import new partials here; keep alphabetical order by topic when adding.
- `_posts/` ‚Äì Markdown with YAML front matter. Filenames are `YYYY-MM-DD-slug.md`. Do not change dates unless adjusting publish time intentionally.
- `manim/` ‚Äì Source of generated images/animations. Update Python scenes when refreshing assets; never hand-edit renders in `media/`.
- `README.md` ‚Äì Contributor docs. Update when workflows or dependencies change.

Theming & Styling Rules
-----------------------
- Use CSS custom properties from `_variables.scss`: `--color-bg`, `--color-text`, `--primary-color`, etc. If a new semantic color is needed, add both light and dark definitions and document usage.
- For responsive tweaks, reuse breakpoints already present (`max-width: 992px`, `768px`, `576px`). Keep mobile-first adjustments consistent across partials.
- Avoid inline styles unless necessary for dynamic Liquid output; prefer adding classes and styling in SCSS.
- When touching `_sass/_about.scss`, note that hero, snapshot, timeline, and ‚Äúnow‚Äù modules share spacing conventions. Mirror existing transitions and animation reductions (see mobile/touch overrides in `site.scss`).
- Dark mode logic: selectors include both `@media (prefers-color-scheme: dark)` and `[data-theme="dark"]`. Update both blocks when changing a component.

Liquid & Markdown Conventions
-----------------------------
- Use `{{ site.baseurl }}` when creating absolute asset URLs from Markdown (e.g., `{{ site.baseurl }}/assets/images/...`).
- Front matter keys currently recognized:
  - `layout`, `title`, `date`, `categories`, `tags`, `description`, `thumbnail`, `cover_image`, `image`, `featured_image`, `inspired_by`, `artist_inspiration`, `last_modified_at`, `updated`, `edited`.
  - Use `inspired_by` (or `artist_inspiration`) to populate the ‚ÄúInspired by ‚Ä¶‚Äù ribbon on listing cards; keep values short.
  - Additional keys must be consumed by layouts before adding widely.
- Category names in front matter should be lowercase or PascalCase without spaces (e.g., `[ML, Notes]`).
- When embedding HTML inside Markdown posts, wrap with blank lines to avoid parser quirks.
- MathJax inline: `$...$`. Block equations: `$$ ... $$`. Escaping underscores may be required (`\\_`) when writing plain text.

JavaScript Specifics
--------------------
- `default.html` includes:
  - Theme toggle code manipulating `localStorage` and `<html data-theme>`.
  - On-scroll navbar class toggling; maintain the `handleScroll` threshold (50px) unless UX change is intentional.
  - AOS initialization with custom `disable` logic (prefers-reduced-motion, small screens, touch/coarse pointers). Respect this when extending animations.
  - Code-copy enhancement for `.markdown pre`: maintain `code-copy-btn` structure and accessible labels.
  - Image lightbox limited to descendants of `.post-content`; only intercept `<img>` clicks when you need lightbox behavior.
- `index.html` hero email button toggles `aria-expanded`/`aria-pressed` and reveals `#hero-email-message`; keep the keyboard handlers and message span synced with the icon list.
- `blogs.html` attaches listeners to `.blog-card[data-href]` so cards respond to click or Enter/Space, replays AOS animations, and clears inline transforms; keep data attributes and script logic aligned.
- `404.html` script:
  - Provides `window.ROCKET_CONFIG`, `window.setRocketExitOffset`, `window.setRocketExitMode`. Adjust rocket flight through these helpers. Keep reduced-motion fallback intact.

Content Creation Rules
----------------------
- Blog posts:
  - Write introductions with emoji headings (e.g., `## üìå Introduction`) if consistent with current style.
  - Include at least one image or diagram when referencing data/visuals. Place supporting images in `assets/images/posts/<year>/<slug>/`.
  - For tutorials, code blocks should include language hints (```` ```python ````). `rouge` handles highlighting.
  - Add `last_modified_at` when editing existing posts to surface ‚ÄúUpdated‚Äù badge.
  - Populate `inspired_by` (or `artist_inspiration`) to credit artwork on listing cards; omit when not applicable.
  - Use callouts with blockquotes and `‚ÑπÔ∏è`/`‚ö†Ô∏è` emoji for tips/warnings as seen in existing posts.
- Landing page content:
  - Timeline entries follow the markup in `index.html`: `.timeline-entry` with `.timeline-marker` (year/dot) and `.timeline-card` content. Keep chronological order descending.
  - The ‚ÄúNow‚Äù section items use `.now-item` with `<i class="fas ...">`. Choose icons available in Font Awesome 6.5.2.
  - The hero email icon reveals a contact message via `.hero-email-message`; preserve `role`, `aria-expanded`, and `aria-pressed` when modifying the social list.

Accessibility & UX
------------------
- Maintain `aria-label`, `aria-pressed`, `role`, `tabindex`, and keyboard handlers already present.
- Any new interactive element must support keyboard activation (Enter/Space) and respond to reduced-motion preferences where animations are introduced.
- Focus states should be visible. Use `outline` with `var(--primary-color)` as seen in existing components.
- When linking out, set `target="_blank"` and `rel="noopener noreferrer"` consistently (see hero social links example).
- `.blog-card` elements depend on `role="link"`, `tabindex="0"`, and JS listeners; keep accessibility attributes in sync with card markup.

Development Workflow
--------------------
- Ruby environment:
  ```
  bundle install
  bundle exec jekyll serve --livereload  # localhost:4000
  bundle exec jekyll build               # outputs to _site/
  ```
- Node tooling is not used; avoid introducing npm unless coordinated.
- Manim assets: install dependencies (`brew install cairo pkg-config pango ffmpeg`, create Python venv, `pip install manim`). Render with `manim -pqh <file> <SceneName> --format=png`. Move curated output into `assets/images/posts/...`.

Do / Don‚Äôt
----------
- **Do** reuse existing SCSS mixins and patterns; ensure both themes stay legible.
- **Do** add inline comments sparingly when logic is non-obvious (e.g., Liquid condition for post updates).
- **Don‚Äôt** rename SCSS classes without updating every template that references them.
- **Don‚Äôt** depend on external JS libraries beyond existing CDNs unless added to `default.html` head/body with integrity attributes.
- **Don‚Äôt** commit large binaries (videos) unless needed for posts; host heavies on YouTube and embed responsibly.

Reference Docs
--------------
- README.md ‚Äì contributor workflow, post authoring guide, Manim instructions.
- `_layouts/default.html` & `_layouts/post.html` ‚Äì inspect before touching global behavior.
- `_sass/_variables.scss` ‚Äì check when introducing new colors/spacing.
- Existing posts in `_posts/` ‚Äì copy style conventions.

Keep this file current when processes or conventions change.
